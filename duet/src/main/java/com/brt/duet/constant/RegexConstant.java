package com.brt.duet.constant;

/**
 * @author 方杰
 * @date 2019年7月22日
 * @description 常用正则表达式
 */
public interface RegexConstant {
	/**
	 * @description 字母
	 */
	String LETTER = "^[A-Za-z]+$";
	/**
	 * @description 数字
	 */
	String NUMBER = "^[0-9]+$";
	/**
	 * @description 字母+数字
	 */
	String LETTER_OR_NUMBER = "^[A-Za-z0-9]+$";
	/**
	 * @description 手机号码
	 */
	String PHONE = "^[1]{1}\\d{10}$";
	/**
	 * @description 邮箱
	 */
	String EMAIL = "^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z0-9]+$";
	/**
	 * @description 日期时间 yyyy-MM-dd HH:mm:ss
	 */
	String DATETIME = "((\\d{2}(([02468][048])|([13579][26]))[\\-\\/\\s]?((((0?[13578])|(1[02]))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(3[01])))|(((0?[469])|(11))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(30)))|(0?2[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])))))|(\\d{2}(([02468][1235679])|([13579][01345789]))[\\-\\/\\s]?((((0?[13578])|(1[02]))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(3[01])))|(((0?[469])|(11))[\\-\\/\\s]?((0?[1-9])|([1-2][0-9])|(30)))|(0?2[\\-\\/\\s]?((0?[1-9])|(1[0-9])|(2[0-8]))))))(\\s((([0-1][0-9])|(2?[0-3]))\\:([0-5]?[0-9])((\\s)|(\\:([0-5]?[0-9])))))";
	/**
	 * @description 日期 yyyy-MM-dd
	 */
	String DATE = "((\\d{2}(([02468][048])|([13579][26]))[\\-]((((0?[13578])|(1[02]))[\\-]((0?[1-9])|([1-2][0-9])|(3[01])))|(((0?[469])|(11))[\\-]((0?[1-9])|([1-2][0-9])|(30)))|(0?2[\\-]((0?[1-9])|([1-2][0-9])))))|(\\d{2}(([02468][1235679])|([13579][01345789]))[\\-]((((0?[13578])|(1[02]))[\\-]((0?[1-9])|([1-2][0-9])|(3[01])))|(((0?[469])|(11))[\\-]((0?[1-9])|([1-2][0-9])|(30)))|(0?2[\\-]((0?[1-9])|(1[0-9])|(2[0-8]))))))";
	/**
	 * @description 时间 HH:mm:ss
	 */
	String TIME = "^(?:[01]\\d|2[0-3])(?::[0-5]\\d){2}$";
	/**
	 * @description id,不为空
	 */
	String ID_NOT_NULL = "^[A-Za-z0-9]{1,36}$";
	/**
	 * @description id,可以为空
	 */
	String ID_NULL = "^[A-Za-z0-9]{0,36}$";
	/**
	 * @description boolean类型判断
	 */
	String BOOLEAN = "^(true)|(false)|(0)|(1)$";
	/**
	 * @description pageSize最大为9999,防止内存溢出
	 */
	String PAGE_SIZE = "^[1-9][0-9]{0,3}$";
}
